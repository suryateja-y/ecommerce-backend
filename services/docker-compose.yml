services:
    mysql-authentication:
        container_name: mysql-authentication
        image: mysql:latest
        ports:
            - "3306:3306"
        restart: unless-stopped
        environment:
            MYSQL_ROOT_USER: root
            MYSQL_ROOT_PASSWORD: <MY_SQL_PASSWORD>
            MYSQL_DATABASE: authentication
        volumes:
            -   mysql_db_authentication:/var/lib/mysql_authentication
    mysql-user-management:
        container_name: mysql-user-management
        image: mysql:latest
        ports:
            - "3307:3306"
        restart: unless-stopped
        environment:
            MYSQL_ROOT_USER: root
            MYSQL_ROOT_PASSWORD: <MY_SQL_PASSWORD>
            MYSQL_DATABASE: user-management
        volumes:
            - mysql_db_user-management:/var/lib/mysql_user-management
    mysql-order-inventory:
        container_name: mysql-order-inventory
        image: mysql:latest
        ports:
            - "3308:3306"
        restart: unless-stopped
        environment:
            MYSQL_ROOT_USER: root
            MYSQL_ROOT_PASSWORD: <MY_SQL_PASSWORD>
            MYSQL_DATABASE: order-inventory
        volumes:
            - mysql_db_order-inventory:/var/lib/mysql_order-inventory
    mysql-payment-management:
        container_name: mysql-payment-management
        image: mysql:latest
        ports:
            - "3309:3306"
        restart: unless-stopped
        environment:
            MYSQL_ROOT_USER: root
            MYSQL_ROOT_PASSWORD: <MY_SQL_PASSWORD>
            MYSQL_DATABASE: payment-management
        volumes:
            - mysql_db_payment-management:/var/lib/mysql_payment-management
    zookeeper:
        image: wurstmeister/zookeeper
        container_name: zookeeper
        ports:
            - "2181:2181"
    kafka:
        image: wurstmeister/kafka
        container_name: kafka
        depends_on:
            -   zookeeper
        ports:
            - "9092:9092"
        environment:
            KAFKA_ADVERTISED_LISTENERS: INSIDE://localhost:9092,OUTSIDE://localhost:9093
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_CREATE_TOPICS: "products:1:1, approval:1:1, product-approval:1:1, approval-register:1:1, seller-approval:1:1, inventory-approval:1:1, approval-status-update:1:1, variant-approval:1:1, variant:1:1, product-search-inventory:1:1, product-search-variant:1:1, product-search-product:1:1, product-search-seller:1:1, order:1:1, payment:1:1, order-update:1:1, user-update:1:1"
    mongo-product-onboarding:
        image: mongo:latest
        container_name: mongo-product-onboarding
        restart: always
        ports:
            - "27017:27017"
#        environment:
#            MONGO_INITDB_ROOT_USERNAME: root
#            MONGO_INITDB_ROOT_PASSWORD: SuryaMongo@123
        volumes:
            -   mongo_db:/var/lib/mongo
            
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
        container_name: elasticsearch
        ports:
            - "9200:9200"
        environment:
            - node.name=elasticsearch
            - cluster.name=es-docker-cluster
            - discovery.type=single-node
            - xpack.security.enabled=false
            - xpack.security.enrollment.enabled=false
        volumes:
            -   es-data:/var/lib/elasticsearch/data
    kibana:
        image: docker.elastic.co/kibana/kibana:8.17.0
        container_name: kibana
        ports:
            -   "5601:5601"
        environment:
            - node.name=kibana
            - cluster.name=es-docker-cluster
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        volumes:
            -   ./kibana.yml:/var/lib/kibana/config/kibana.yml
        depends_on:
            -   elasticsearch
        
volumes:
    mongo_db:
    es-data:
    mysql_db_authentication:
    mysql_db_user-management:
    mysql_db_order-inventory:
    mysql_db_payment-management: